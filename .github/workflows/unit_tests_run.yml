# This workflow will run test for IDMP project

name: IDMP Automation Test

on:
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  IDMP:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install python's dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./etc/unit_tests/requirements.txt
      - name: Install robot
        run: |
          sudo wget --no-verbose -m -nH -nd -P /usr/bin https://raw.githubusercontent.com/ontodev/robot/master/bin/robot
          sudo wget --no-verbose -m -nH -nd -P /usr/bin https://github.com/ontodev/robot/releases/latest/download/robot.jar
          sudo chmod +x /usr/bin/robot
      - name: Merge all IDMP ontologies with robot
        run: |
          robot merge --input AboutIDMPDev-ReferenceIndividuals.rdf --output AboutIDMPDev-ReferenceIndividuals.ttl --catalog /home/runner/work/idmp/idmp/catalog-v001.xml
      - name: Run unit tests using rdflib
        run: |
          python etc/unit_tests/unit_test_runner.py \
            --ontology_location AboutIDMPDev-ReferenceIndividuals.ttl \
            --root_folder etc/unit_tests/ \
            --cq_source  etc/CQ/Example/ \
            --config_file configs/idmp_tests_config.yaml
          if [ $? != 0 ];
          then
          exit $?
          fi
      - name: Archive merged ontology on failure
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: merged-ontology
          path: AboutIDMPDev-ReferenceIndividuals.ttl
  GSRS:
    runs-on: ubuntu-latest
    env:
      GSRS_VERSION: "2022-12-15"
      SPARQL_GENERATE_VERSION: "2.0.12"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install python's dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./etc/unit_tests/requirements.txt
      - name: Install SPARQL-Generate ${{ env.SPARQL_GENERATE_VERSION }}
        run: |
          url=https://github.com/sparql-generate/sparql-generate/releases/download/${{ env.SPARQL_GENERATE_VERSION }}/sparql-generate-${{ env.SPARQL_GENERATE_VERSION }}.jar
          sudo wget --no-verbose -m -nH -nd -O sparql-generate.jar $url
      - name: Cache Step
        id: gsrs-caches
        uses: actions/cache@v3
        with:
          path: |
            public_data.json
            gsrs-transformed.ttl
          key: gsrs-public-data-${{ env.GSRS_VERSION }}|transformation-files-${{ hashFiles('etc/transformation/GSRS/*.rqg') }}
      - name: Download and Extract GSRS Version ${{ env.GSRS_VERSION }}
        if: steps.gsrs-caches.outputs.cache-hit != 'true'
        run: |
          url=https://gsrs.ncats.nih.gov/downloads/dump-public-${{ env.GSRS_VERSION }}.gsrs
          sudo wget --no-verbose -m -nH -nd -O public_data.gz $url
          gunzip public_data.gz
          jq -c -s '.' public_data > public_data.json
      - name: Transform GSRS
        if: steps.gsrs-caches.outputs.cache-hit != 'true'
        run: |
          queries=(gsrs-public-data-identifiers gsrs-public-data-names gsrs-public-data-relationships gsrs-public-data-substances)
          for query in "${queries[@]}"; do
            echo "Transforming $query.rqg"
            java -Xmx5G -jar sparql-generate.jar -l INFO -q etc/transformation/GSRS/$query.rqg -o $query.ttl
          done
          result=gsrs-transformed.ttl
          rm -rf $result
          for query in "${queries[@]}"; do
            cat $query.ttl >>$result
          done
      - name: Run unit tests using rdflib
        run: |
          python etc/unit_tests/unit_test_runner.py \
            --ontology_location gsrs-transformed.ttl \
            --root_folder etc/unit_tests/ \
            --cq_source  etc/CQ/Example/ \
            --config_file configs/gsrs_tests_config.yaml
          if [ $? != 0 ];
          then
          exit $?
          fi
